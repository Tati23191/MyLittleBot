import telebot
from config import *
from extensions import *


bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start', 'help'])
def start(message: telebot.types.Message):
    text = '–ü—Ä–∏–≤–µ—Ç üëã \n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n<–∏–º—è –≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>\n–ß—Ç–æ–±—ã —É–≤–∏–¥–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã, –Ω–∞–∂–º–∏: /values. \n–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏, –Ω–∞–∂–º–∏: /exit'
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:'
    for i in currencies.keys():
        text = '\n'.join((text, i))
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['yes'])
def start(message: telebot.types.Message):
    text = '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n<–∏–º—è –≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>. \n–ß—Ç–æ–±—ã —É–≤–∏–¥–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã, –Ω–∞–∂–º–∏: /values'
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['exit'])
def start(message: telebot.types.Message):
    text = '–î–æ –≤—Å—Ç—Ä–µ—á–∏ üëã'
    bot.send_message(message.chat.id, text)


@bot.message_handler(content_types=['text'])
def get_price(message: telebot.types.Message):
    try:
        values = message.text.split()

        if len(values) > 3:
            raise APIException('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. \n–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É? /yes')
        if len(values) < 3:
            raise APIException('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. \n–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É? /yes')

        quote, base, amount = values
        total_base = CryptoConverter.get_price(quote, base, amount)
    except APIException as e:
        bot.reply_to(message, f'‚õî –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{e}')

    except Exception as e:
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}')
    else:
        text = f'–¶–µ–Ω–∞ {amount} {quote} - {total_base} {base} \n–ü–æ–≤—Ç–æ—Ä–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é? /yes\n–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏: /exit'
        bot.send_message(message.chat.id, text)


bot.polling()
